"#version 450 core\n"
"\n"
"layout (binding = 0) uniform usampler2D vramTexture;\n"
"layout (location = 0) out vec4 colour;\n"
"\n"
"layout (location = 0) uniform int realHorizontalRes;\n"
"layout (location = 1) uniform int realVerticalRes;\n"
"layout (location = 2) uniform int consoleHorizontalRes;\n"
"layout (location = 3) uniform int consoleVerticalRes;\n"
"layout (location = 4) uniform int topX;\n"
"layout (location = 5) uniform int bottomY;\n"
"\n"
"// Convert pixels into RGBA format for screen display\n"
"void main(void) {\n"
"\n"
"	// Calculate where we will read pixel from\n"
"	vec2 currentCoord = gl_FragCoord.xy;\n"
"	float horizontalScalingFactor = float(realHorizontalRes) / float(consoleHorizontalRes);\n"
"	float verticalScalingFactor = float(realVerticalRes) / float(consoleVerticalRes);\n"
"	currentCoord.x = currentCoord.x / horizontalScalingFactor;\n"
"	currentCoord.y = currentCoord.y / verticalScalingFactor;\n"
"	currentCoord.x = currentCoord.x + topX;\n"
"	currentCoord.y = currentCoord.y + bottomY;\n"
"\n"
"	// Read pixel from vram texture\n"
"	uvec4 pixel = texelFetch(vramTexture, ivec2(currentCoord), 0);\n"
"\n"
"	// Account for RGB intensity on real PSX\n"
"	float red = 0.0;\n"
"	switch (pixel.r) {\n"
"		case 0:\n"
"		case 1:\n"
"		case 2:\n"
"		case 3:\n"
"		case 4:\n"
"		case 5:\n"
"		case 6:\n"
"		case 7:\n"
"		case 8:\n"
"			red = float(pixel.r) * 2;\n"
"			break;\n"
"		default:\n"
"			red = 16.0 + (float(pixel.r - 8) * 0.65217);\n"
"			break;\n"
"	}\n"
"\n"
"	float green = 0.0;\n"
"	switch (pixel.g) {\n"
"		case 0:\n"
"		case 1:\n"
"		case 2:\n"
"		case 3:\n"
"		case 4:\n"
"		case 5:\n"
"		case 6:\n"
"		case 7:\n"
"		case 8:\n"
"			green = float(pixel.g) * 2;\n"
"			break;\n"
"		default:\n"
"			green = 16.0 + (float(pixel.g - 8) * 0.65217);\n"
"			break;\n"
"	}\n"
"	\n"
"	float blue = 0.0;\n"
"	switch (pixel.b) {\n"
"		case 0:\n"
"		case 1:\n"
"		case 2:\n"
"		case 3:\n"
"		case 4:\n"
"		case 5:\n"
"		case 6:\n"
"		case 7:\n"
"		case 8:\n"
"			blue = float(pixel.b) * 2;\n"
"			break;\n"
"		default:\n"
"			blue = 16.0 + (float(pixel.b - 8) * 0.65217);\n"
"			break;\n"
"	}\n"
"	\n"
"	// Output with conversion\n"
"	colour = vec4(red*8.225/255.0, green*8.225/255.0, blue*8.225/255.0, 1.0);\n"
"}\n"
